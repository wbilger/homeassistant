#all options as of Android App 1.7
- alias: notify test wayne
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.presence_wayne_status
      from: 'Just Left'
      to: 'Just Left'   #dummy test
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.notification_test_wayne_phone
    - service: input_boolean.turn_on
      entity_id: input_boolean.notification_test_wayne_lrt

    - service: notify.mobile_app_phone_wayne
      data_template:
        title: "Test Android App Notifications."
        message: "Do you want to get the next test notification?"
        data:
          icon_url: local/photos/notify_garbage_recycling.png
          actions:          
            - action: notify_again_test
              title: Notify Again?
            - action: URI
              title: Open Url
              uri: https://londonrooftruss.com              
          tag: wayne_test
          sticky: true      #doesn't go away when clicked
          color: red #'#2DF56D' # or 'red'
          #clickAction: '' #'https://google.com' # action when clicking main notification
          persistent: true    #cannot be dimissed by swiping away
          #ttl: 0 # https://firebase.google.com/docs/reference/admin/node/admin.messaging.AndroidConfig.html#optional-ttl
          priority: high # https://firebase.google.com/docs/reference/admin/node/admin.messaging.AndroidConfig.html#optional-priority
- alias: notify test wayne 2
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.presence_wayne_status
      from: 'Just Left'
      to: 'Just Left'   #dummy test
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.notification_test_wayne_phone
    - service: input_boolean.turn_on
      entity_id: input_boolean.notification_test_wayne_lrt
    - service: notify.mobile_app_phone_wayne
      data_template:
        title: "Test Android App Notifications."
        message: "Do you want to get the next test notification?"
        data:
          image: local/photos/notify_garbage_recycling.png
          actions:
            - action: notify_again_test
              title: Notify Again?
            - action: URI
              title: Open Url
              uri: https://google.com              
          tag: tag
          sticky: 'false'
          color: 'green' #'#2DF56D' # or 'red'
          clickAction: 'https://google.com' # action when clicking main notification
          ttl: 10000 # https://firebase.google.com/docs/reference/admin/node/admin.messaging.AndroidConfig.html#optional-ttl
          #priority: 'high' # https://firebase.google.com/docs/reference/admin/node/admin.messaging.AndroidConfig.html#optional-priority
- alias: notify test jenn
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.presence_wayne_status
      from: 'Just Left'
      to: 'Just Left'   #dummy test
  action:
    - service: notify.mobile_app_phone_jenn
      data_template:
        title: "Jenn Test Android App Notifications."
        message: "Press the button below so I can see if you phone can send back even though your school is stupid and blocks access... And text Wayne."
        data:
          image: local/photos/notify_garbage_recycling.png
          actions:
            - action: jenn_press
              title: HERE. Press Right Here!
          color: 'red'
- alias: '[Notification - Action] Jenn Press'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: jenn_press
  action:
    - service: notify.mobile_app_phone_wayne
      data_template:
        title: Jenn Test Notification Clicked
        message: '{{ trigger.event.context["user_id"] }} / {{ trigger.event.data.sourceDeviceName }}'
    - service: persistent_notification.create
      data_template:
        message: "Jenn's UserID"
        title: '{{ trigger.event.context["user_id"] }}'

- alias: '[Notification - Action] Notify Again'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: notify_again_test
  # condition:
  #   - condition: template
  #     value_template: '{{ trigger.event.data["tag"] == "notify-test" }}'
#Wayne UserID: c9ce4686a1b642fc9acb4a8b59181499
#Jenn UserID: 52011960541f4ae3872b4f7eded76992  
  action:
    - service: input_boolean.toggle
      entity_id: input_boolean.test
    - service: notify.mobile_app_phone_wayne
      data_template:
        title: Test Notification Clicked
        message: '{{ trigger.event.context["user_id"] }} / {{ trigger.event.data["message"] }}'
    - service: notify.mobile_app_phone_wayne
      data:
        message: clear_notification
        data:
          tag: wayne_test
    # - service: persistent_notification.create
    #   data_template:
    #     message: "UserID"
    #     title: '{{ trigger.event.context["user_id"] }}'

- alias: notify test ios
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.presence_wayne_status
      from: 'Just Left'
      to: 'Just Left'   #dummy test
  action:
    - service: notify.mobile_app_kales_iphone
      data:
        title: "Washing Machine has been started."
        message: "Do you want to get notified when load finished?"
        data:
          push:   #for iphones
            category: "test"


# - alias: notify test ios clicked
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: ios.notification_action_fired
#     # event_data:
#     #   actionName: TEST
#   action:
#     - service: notify.google_wayne_phone
#       data_template:
#         title: "IOS notification clicked."
#         message: 'target - {{ trigger.event.data["sourceDeviceName"] }} and action {{ trigger.event.data["actionName"] }}'

- alias: notify test closed
  initial_state: 'on'
  trigger:
    platform: event
    event_type: html5_notification.closed
  condition:
    - condition: template
      value_template: '{{ trigger.event.data["tag"] == "notify-test" }}'
  action:
    - service: input_boolean.turn_off
      data_template:
        entity_id: 'input_boolean.notification_test_{{ trigger.event.data["target"] }}'

- alias: notify test phone clicked
  initial_state: 'on'
  trigger:
    platform: event
    event_type: html5_notification.clicked
  condition:
    - condition: template
      value_template: '{{ trigger.event.data["tag"] == "notify-test" }}'
  action:    
    - service: input_boolean.turn_on
      data_template:
        entity_id: 'input_boolean.notification_test_{{ trigger.event.data["action"] }}'

- alias: notify test speakers clicked
  initial_state: 'on'
  trigger:
    platform: event
    event_type: html5_notification.clicked
    event_data:
      action: notify_speakers
  condition:
    - condition: template
      value_template: '{{ trigger.event.data["tag"] == "notify-test" }}'
  action:    
    - service: notify.google
      data_template:
        title: "Notification will be sent to..."
        message: '{{ trigger.event.data["target"] }}'
        target: ['{{ trigger.event.data["target"] }}']

# - alias: notify test received
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: html5_notification.received
#   condition:
#     - condition: template
#       value_template: '{{ trigger.event.data["tag"] == "notify-test" }}'
#     - condition: template
#       value_template: '{{ trigger.event.data["target"] == "wayne_phone" }}'
#   action:
#     - service: notify.google_wayne_lrt
#       data_template:
#         title: "Notification received on..."
#         message: '{{ trigger.event.data["target"] }}'



# - alias: HTML5 push notification received and displayed on device
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: html5_notification.received
#   action:    
#     - service: notify.telegram
#       data:
#         message: "HTML5 notification received."
    
# - alias: HTML5 push notification clicked.
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: html5_notification.clicked
#   action:    
#     - service: notify.telegram
#       data_template:
#         message: "HTML5 notification clicked on {{ trigger.event.data.target }}."

      # {{ trigger.event.data.data["entityType"] }}.{{ trigger.event.data.data["secureAction"] }}
      # data_template:
      #   entity_id: >
      #   {{ trigger.event.data.data["entityName"] }}        

        
# - alias: HTML5 push notification phone action button clicked
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: html5_notification.clicked
#     event_data:
#       action: notify_phone
#   action:    
#     - service: notify.telegram
#       data:
#         message: "HTML5 notification Notify Phone clicked."

# - alias: HTML5 push notification google home action button clicked
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: html5_notification.clicked
#     event_data:
#       action: notify_google
#   action:    
#     - service: notify.telegram
#       data:
#         message: "HTML5 notification Notify Google Home clicked."
   
# - alias: HTML5 push notification closed
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: html5_notification.closed
#   action:    
#     - service: notify.telegram
#       data:
#         message: "HTML5 notification closed."